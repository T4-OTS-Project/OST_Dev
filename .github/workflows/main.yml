name: Scan Docker image

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: terraform-project-vm
  IMAGE_NAME: ots-image
  ARTIFACT_REGISTRY_LOCATION: ots-project-repo

jobs:
  scan_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Pull Docker image
        run: docker pull gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest

      - name: Tag Docker image with digest reference
        run: |
          IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE)
          docker tag $IMAGE $DIGEST

      - name: Trigger vulnerability scan of Docker image
        id: analyze_image
        uses: google-github-actions/artifact-registry@master
        with:
          subcommand: "analyze-image"
          arguments: "--async --artifact-url=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}@$(docker inspect --format='{{index .RepoDigests 0}}' gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }})"

      - name: Wait for vulnerability scan to complete
        run: |
          while [[ "$(gcloud artifacts operations describe $(echo ${{ steps.analyze_image.outputs.artifacts_url }} | sed 's|.*/||'))" != *'done: true'* ]]; do sleep 10s; done

      - name: Get scan results
        run: |
          gcloud artifacts describe $(echo ${{ steps.analyze_image.outputs.artifacts_url }} | sed 's|.*/||')

env:
  IMAGE_NAME: ots-image
  ID_PROJECT: terraform-project-atserge1
  PROJECT_REPO: ots-project-repo

name: Deployment
on:
  push:
    branches: [atserge1]
  workflow_dispatch:
jobs:
#Preparing machine
  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#Authenticate with Google cloud      
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.ATSERGE_SA_KEY }}
          project_id: ${{ env.ID_PROJECT }}
          export_default_credentials: true

# Setting up Terraform into machine     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.9
      
      # - name: Debug secrets 
      #   run: |
      #     echo ${{ secrets.KUBE_CONFIG }} 
      #     echo "${{ secrets }}"
# Gets credentials to to know to which cluster exactly to deploy
      
      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'project-cluster'
          location: 'us-central1' 
# Setting up kubeconfig fot the authentication
      - id: 'kubeconfig'
        run: 'mkdir ~/.kube && cat $KUBECONFIG > ~/.kube/config'
      # - name: Setup kubeconfig
      #   run: |
      #     export USE_GKE_GCLOUD_AUTH_PLUGIN=True
      #     mkdir $HOME/.kube
      #     echo ${{ env.KUBE_CONFIG }} | base64 --decode > $HOME/.kube/config

# Initialize terraform setup              
      - name: Terraform init
        working-directory: deployment
        run: |
          terraform init
          
# Destroy old configurations then apply new one     
      - name: Terraform apply
        working-directory: deployment
        run: |
          
          terraform apply -auto-approve
